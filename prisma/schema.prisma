generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model products {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  price       Int
  type        String
  item        items[]
  stock       stock[]
  supplier    suppliers[]
}

model sales {
  id         Int      @id @default(autoincrement())
  buyerId    String
  dueDate    DateTime
  totalValue Int
  item       items[]
  user       users    @relation(fields: [buyerId], references: [id])
}

model appointments {
  id        Int      @id @default(autoincrement())
  funcId    String
  clientId  String
  petId     Int
  serviceId String
  price     String
  date      DateTime
  client    users    @relation("client", fields: [clientId], references: [id])
  pet       pets     @relation(fields: [petId], references: [id])
  func      users    @relation("func", fields: [funcId], references: [id])
}

model pets {
  id           Int            @id @default(autoincrement())
  userId       String
  name         String
  type         String
  user         users          @relation(fields: [userId], references: [id])
  appointments appointments[]
}

model services {
  id    Int    @id @default(autoincrement())
  type  String
  price Int
}

model users {
  id       String         @id @default(uuid())
  name     String
  document String         @unique
  password String
  type     String
  email    String
  ativo    Int
  sale     sales[]
  func     appointments[] @relation("func")
  client   appointments[] @relation("client")
  pets     pets[]
}

model items {
  id        Int      @id @default(autoincrement())
  saleId    Int
  ProductId Int
  product   products @relation(fields: [ProductId], references: [id])
  sale      sales    @relation(fields: [saleId], references: [id])
}

model stock {
  id             Int      @id @default(autoincrement())
  productId      Int
  quantity       Int
  expirationDate DateTime
  product        products @relation(fields: [productId], references: [id])
}

model suppliers {
  id        Int      @id @default(autoincrement())
  productId Int
  name      String
  phone     String
  product   products @relation(fields: [productId], references: [id])
}

model finances {
  id          Int       @id @default(autoincrement())
  Value       Int
  date        DateTime
  description String
}

enum status {
  order
  paid
  pending
  canceled
}

enum types {
  cat
  dog
  fish
  bird
  rat
  reptile
  exotic
}
