generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model products {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  price       Int
  type        String
  item        items[]
}

model sales {
  id         Int      @id @default(autoincrement())
  buyerId    String
  dueDate    DateTime
  totalValue Int
  item       items[]
  user       users    @relation(fields: [buyerId], references: [id])
}

model pets {
  id        Int       @id @default(autoincrement())
  userId    String
  name      String
  type      String
  user      users     @relation(fields: [userId], references: [id])
}

model services {
  id        Int       @id default(autoincrement())
  type      String
  price     Int
}

model appointments {
  id        Int       @id default(autoincrement())
  funcId    String
  clientId  String
  petId     String
  serviceId String
  price     String
  date      DateTime
  client    users   @relation(fields: [clientId], references: [id])
  pet       pets    @relation(fields: [petId], references: [id])
  func      users   @relation(fields: [funcId], references: [id])
}

model users {
  id       String  @id @default(uuid())
  name     String
  document String  @unique
  password String
  type     String
  email    String
  ativo Int
  sale     sales[]
}

model items {
  id        Int      @id @default(autoincrement())
  saleId    Int
  ProductId Int
  product   products @relation(fields: [ProductId], references: [id])
  sale      sales    @relation(fields: [saleId], references: [id])
}

enum status {
  order
  paid
  pending
  canceled
}

enum types {
  cat
  dog
  fish
  bird
  rat
  reptile
  exotic
}
